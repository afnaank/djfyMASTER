{"ast":null,"code":"import _classCallCheck from \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/src/App.js\";\n// When running locally:\n// change connect-spotify button link to \"http://localhost:8888/login\"\nimport React, { Component } from 'react';\nimport './bootstrap.css'; // Use Spotify Web API JS Wrapper,\n// provided by https://github.com/JMPerez/spotify-web-api-js\n\nimport SpotifyWebApi from 'spotify-web-api-js'; // Create object to make the API calls\n\nvar spotifyApi = new SpotifyWebApi();\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  // Get access token to be able to fetch data from the Spotify API\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this)); // Extract and set spotify access token returned from URL\n\n    var params = _this.getHashParams();\n\n    var token = params.access_token;\n\n    if (token) {\n      spotifyApi.setAccessToken(token);\n    } // Set variables only if we have token\n\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      spotifyAccount: {\n        accountName: 'Not Logged In',\n        accountPic: ''\n      }\n    };\n    return _this;\n  } // Extracts token params from hash string of the URL into an object with key-value pairs.\n  // Using code provided by https://github.com/spotify/web-api-auth-examples\n\n\n  _createClass(App, [{\n    key: \"getHashParams\",\n    value: function getHashParams() {\n      var hashParams = {};\n      var e,\n          r = /([^&;=]+)=?([^&;]*)/g,\n          q = window.location.hash.substring(1);\n      e = r.exec(q);\n\n      while (e) {\n        hashParams[e[1]] = decodeURIComponent(e[2]);\n        e = r.exec(q);\n      }\n\n      return hashParams;\n    } // Request account data using API,\n    // and update variables with returned data\n\n  }, {\n    key: \"getConnectedAccount\",\n    value: function getConnectedAccount() {\n      var _this2 = this;\n\n      spotifyApi.getMe().then(function (response) {\n        _this2.setState({\n          spotifyAccount: {\n            accountName: response.display_name,\n            accountPic: response.images[0].url\n          }\n        });\n      });\n    } // Display our data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"cover-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"DJFY\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Spotify Account: \", this.state.spotifyAccount.accountName), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: this.state.spotifyAccount.accountPic,\n        style: {\n          height: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), this.state.loggedIn && React.createElement(\"button\", {\n        class: \"btn btn-sm btn-secondary\",\n        onClick: function onClick() {\n          return _this3.getConnectedAccount();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Check Account\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Connect to Spotify \\xA0\", React.createElement(\"a\", {\n        href: \"https://djfy-backend-server.herokuapp.com/login\",\n        class: \"btn btn-lg btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, \"Connect\"), \"\\xA0\\xA0\\xA0\\xA0\", \"Join Room \\xA0\", React.createElement(\"button\", {\n        class: \"btn btn-lg btn-secondary\",\n        onClick: function onClick() {\n          return _this3.joinRoom();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Join\")));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/afnaan/Desktop/NEW_PROJECT/djfyMASTER/src/App.js"],"names":["React","Component","SpotifyWebApi","spotifyApi","App","params","getHashParams","token","access_token","setAccessToken","state","loggedIn","spotifyAccount","accountName","accountPic","hashParams","e","r","q","window","location","hash","substring","exec","decodeURIComponent","getMe","then","response","setState","display_name","images","url","height","getConnectedAccount","joinRoom"],"mappings":"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","sourcesContent":["// When running locally:\n// change connect-spotify button link to \"http://localhost:8888/login\"\n\nimport React, { Component } from 'react';\nimport './bootstrap.css';\n\n// Use Spotify Web API JS Wrapper,\n// provided by https://github.com/JMPerez/spotify-web-api-js\nimport SpotifyWebApi from 'spotify-web-api-js';\n\n// Create object to make the API calls\nconst spotifyApi = new SpotifyWebApi();\n\n\nclass App extends Component {\n\n    // Get access token to be able to fetch data from the Spotify API\n    constructor() {\n        super();\n\n        // Extract and set spotify access token returned from URL\n        const params = this.getHashParams();\n        const token = params.access_token;\n        if (token) {\n            spotifyApi.setAccessToken(token);\n        }\n\n        // Set variables only if we have token\n        this.state = {\n            loggedIn: token ? true : false,\n            spotifyAccount: {accountName: 'Not Logged In', accountPic: ''}\n        }\n    }\n\n    // Extracts token params from hash string of the URL into an object with key-value pairs.\n    // Using code provided by https://github.com/spotify/web-api-auth-examples\n    getHashParams() {\n        var hashParams = {};\n        var e, r = /([^&;=]+)=?([^&;]*)/g,\n            q = window.location.hash.substring(1);\n        e = r.exec(q)\n        while (e) {\n            hashParams[e[1]] = decodeURIComponent(e[2]);\n            e = r.exec(q);\n        }\n        return hashParams;\n    }\n\n    // Request account data using API,\n    // and update variables with returned data\n    getConnectedAccount() {\n        spotifyApi.getMe()\n            .then((response) => {\n                this.setState( {\n                    spotifyAccount: {\n                        accountName: response.display_name,\n                        accountPic: response.images[0].url\n                    }\n                });\n            })\n    }\n\n    // Display our data\n    render() {\n        return (\n            <div className=\"App\">\n                <h1 class=\"cover-heading\">DJFY</h1>\n\n                {/* Show account name and pic */}\n                <div>\n                    Spotify Account: {this.state.spotifyAccount.accountName}\n                </div>\n                <div>\n                    <img src={this.state.spotifyAccount.accountPic} style={{ height: 100 }}/>\n                    <br /> <br />\n                </div>\n\n                {/* Show button to check spotify account */}\n                {\n                    this.state.loggedIn &&\n                    <button class=\"btn btn-sm btn-secondary\" onClick={() => this.getConnectedAccount()}>\n                        Check Account\n                    </button>\n                }\n\n                {/* Connect & Join buttons */}\n                <br /> <br /> <br /> <br />\n                <p>\n                    Connect to Spotify &nbsp;\n                    <a href=\"https://djfy-backend-server.herokuapp.com/login\" class=\"btn btn-lg btn-primary\">Connect</a>\n\n                    &nbsp;&nbsp;&nbsp;&nbsp;{/* Adding space in between the two buttons */}\n\n                    Join Room &nbsp;\n                    <button class=\"btn btn-lg btn-secondary\" onClick={() => this.joinRoom()}>Join</button>\n                </p>\n\n\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _createClass from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/afnaan/Desktop/djfyMASTER/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/afnaan/Desktop/djfyMASTER/src/App.js\";\n\n/**\n* DJFY Web App code\n*\n*/\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport './css/bootstrap.css';\nimport './css/cover.css';\nimport SpotifyWebApi from 'spotify-web-api-js'; //import url from 'url-parameters';\n\nvar urlListener = require('url-listener');\n\nurlListener(function (event) {\n  // your logic here!\n  console.log('URL UPDATED!');\n});\nvar spotifyApi = new SpotifyWebApi();\nvar tracks = [];\nvar searchTracks = [];\nvar listSearchTracks;\nvar listTracks; //= tracks.map((tracks) =>\n//<li><button style = {{width: 25, height: 25, borderWidth: 3, fontSize: 15, backgroundColor: '#FF0000'}}>-</button>{tracks}</li>\n//);\n\nvar trackToggle; //var snapshot = '';\n//var currentTrack = '';\n//var mainid = '';\n\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    background: '#282c34'\n  }\n};\nvar hereIsThis = this;\nModal.setAppElement(document.getElementById('app'));\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  _createClass(App, [{\n    key: \"isTherePlaylistID\",\n    //This checks if there is a playlist ID currently in the URL\n    //this is for the guest users that have the shared link\n    //it should immediately print the playlist tracks/info\n    value: function isTherePlaylistID() {\n      var idCheck = this.getUrlParams2(\"playlist_id\");\n\n      if (idCheck && idCheck.length > 2) {\n        console.log(\"WE HAVE A PLAYLIST ID IN THE URL: \" + idCheck);\n        this.getPlaylistHelper(idCheck);\n      }\n    } // Get access token to be able to fetch data from the Spotify API\n\n  }]);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.changePlaylistName = function (event) {\n      _this.setState({\n        playlistName: event.target.value\n      });\n    };\n\n    var token = _this.getUrlParams2(\"access_token\");\n\n    console.log(\"token: \" + token);\n\n    if (token) {\n      console.log(\"setting token...\");\n      spotifyApi.setAccessToken(token);\n    }\n\n    _this.isTherePlaylistID();\n\n    _this.state = {\n      loggedIn: token ? true : false,\n      spotifyAccount: {\n        accountName: 'Not Logged In',\n        accountPic: '',\n        Id: ''\n      },\n      playlistName: '',\n      roomCode: '',\n      value: '',\n      isCreated: false\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this))); // this.handleSearch = this.handleSearch.bind(this);\n    //this.getHashParams = this.getHashParams.bind(this);\n\n    _this.getConnectedAccount = _this.getConnectedAccount.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createNewPlaylist = _this.createNewPlaylist.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createNewPlaylistCallback = _this.createNewPlaylistCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.createNewPlaylistHelper = _this.createNewPlaylistHelper.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPlaylistHelper = _this.getPlaylistHelper.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getPlaylistTracksCallback = _this.getPlaylistTracksCallback.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.search = _this.search.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.searchHelper = _this.searchHelper.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.getTrack = _this.getTrack.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTracks = _this.addTracks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.removeTracks = _this.removeTracks.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.render = _this.render.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.openModal = _this.openModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.afterOpenModal = _this.afterOpenModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.closeModal = _this.closeModal.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addTracksCallBack = _this.addTracksCallBack.bind(_assertThisInitialized(_assertThisInitialized(_this))); //this.forceUpdate = this.forceUpdate.bind(this);\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"openModal\",\n    value: function openModal() {\n      this.setState({\n        modalIsOpen: true\n      });\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {// references are now sync'd and can be accessed.\n      //this.subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"closeModal\",\n    value: function closeModal() {\n      this.setState({\n        modalIsOpen: false\n      });\n      window.location.reload();\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      this.setState({\n        value: event.target.value\n      });\n    }\n  }, {\n    key: \"handleSearch\",\n    value: function handleSearch(event) {\n      this.search(this.state.search);\n    }\n  }, {\n    key: \"getUrlParams2\",\n    value: function getUrlParams2(prop) {\n      var params = {};\n      var search = decodeURIComponent(window.location.href.slice(window.location.href.indexOf('#') + 1));\n      var definitions = search.split('&');\n      definitions.forEach(function (val, key) {\n        var parts = val.split('=', 2);\n        params[parts[0]] = parts[1];\n      });\n      return prop && prop in params ? params[prop] : params;\n    } // Request API data\n    // Using library provided by JMPerez/spotify-web-api-js\n    // (https://github.com/JMPerez/spotify-web-api-js)\n\n  }, {\n    key: \"getConnectedAccount\",\n    value: function getConnectedAccount() {\n      var _this2 = this;\n\n      spotifyApi.getMe().then(function (response) {\n        _this2.setState({\n          spotifyAccount: {\n            accountName: response.display_name,\n            accountPic: response.images[0].url,\n            Id: response.id\n          }\n        });\n      });\n      var token = this.getUrlParams2(\"access_token\");\n      spotifyApi.setAccessToken(token);\n    }\n    /*joinRoom() {\n          var x = document.getElementById(\"joinroom\");\n          var text = \"\";\n          text = x.elements[0].value;\n          console.log(\"code: \" + text);\n          //check if its a legal inputted code (4 capital characters)\n          if(this.state.value.length == 4){\n            //check if the database has the inputted code\n            if(false/* inDatabase(this.state.value.toUpperCase()){\n              //if the database has that code, display the corresponding playlist\n              //enter room\n            }\n            else{\n              //if it doesnt then error out\n              alert(this.state.value.toUpperCase() + \" is an invalid room code.\");\n            }\n          }\n          else{\n            alert(this.state.value.toUpperCase() + \" is an invalid room code. \\nRoom codes are 4 characters long.\")\n          }\n    }*/\n\n    /*makeid(length) {\n      var text = \"\";\n      var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n       for (var i = 0; i < length; i++)\n         text += possible.charAt(Math.floor(Math.random() * possible.length));\n       return text;\n     }*/\n\n  }, {\n    key: \"createNewPlaylistHelper\",\n    value: function () {\n      var _createNewPlaylistHelper = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id, name) {\n        var playlistID;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(\"helper id: \" + id);\n                _context.next = 3;\n                return this.createNewPlaylist(id, name);\n\n              case 3:\n                playlistID = this.getUrlParams2(\"x\");\n                console.log(\"here is the playlist ID: \" + playlistID);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createNewPlaylistHelper(_x, _x2) {\n        return _createNewPlaylistHelper.apply(this, arguments);\n      }\n\n      return createNewPlaylistHelper;\n    }()\n  }, {\n    key: \"createRoom\",\n    value: function createRoom() {\n      var _this3 = this;\n\n      if (this.state.loggedIn) {\n        this.setState({\n          //roomCode: this.makeid(4),\n          playlistName: this.state.value\n        });\n        var x = document.getElementById(\"createroom\");\n        var playlistname = \"\";\n        playlistname = x.elements[0].value;\n        var token = this.getUrlParams2(\"access_token\");\n        fetch('https://api.spotify.com/v1/me', {\n          headers: {\n            'Authorization': 'Bearer ' + token\n          }\n        }).then(function (response) {\n          return response.json();\n        }).then(function (data) {\n          return _this3.createNewPlaylistHelper(data.id, playlistname);\n        });\n        console.log(\"back in createRoom()\");\n        spotifyApi.setAccessToken(token);\n      } else {\n        //get room code input\n        //enter room\n        alert(\"You need to connect to Spotify before you can create a room.\");\n      }\n    } //Callback function thats called when after spotify API runs getPlaylistTracks()\n    //error is an error object, null if no error\n    //value is the value if the request succeeded\n    //This prints the total tracks, adds the tracks to the tracks array, and prints them\n\n  }, {\n    key: \"getPlaylistTracksCallback\",\n    value: function getPlaylistTracksCallback(error, value) {\n      console.log(\"error: \" + error);\n      console.log(\"in the callback...totala: \" + value.total);\n      var total = value.total;\n      console.log(\"total assigned: \" + total);\n      var i;\n\n      for (i = 0; i < value.total; i++) {\n        tracks.push(value.items[i].track); //name of the track\n\n        console.log(\"track: \" + tracks[i]); //console.log(\"track \" + i + value.items[i].track.name);\n      } //\n      //displays all the tracks, the corresponding buttons will call getSNIDtoremoveTracks(trackURI)\n      //set the button id to the uri of the track. this is so when we do e.target.id, itll actually be passing in the track.uri\n\n\n      listTracks = tracks.map(function (tracks) {\n        return React.createElement(\"li\", {\n          key: tracks.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: tracks.uri,\n          onClick: function onClick(e) {\n            return hereIsThis.getSNIDtoremoveTracks(e.target.id);\n          },\n          class: \"btn btn-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, \" - \"), \" \", tracks.name, \" by \", tracks.artists[0].name);\n      });\n      hereIsThis.forceUpdate(); //this.setState({listTracks});\n      // this.render().bind(this);\n      //ReactDOM.render();\n    } //this calls getPlaylistTracks given the playlist ID\n\n  }, {\n    key: \"getPlaylistHelper\",\n    value: function getPlaylistHelper(playlistID) {\n      console.log(\"getting playlist...\" + playlistID);\n      hereIsThis = this;\n      var token = this.getUrlParams2(\"access_token\");\n      spotifyApi.setAccessToken(token);\n      spotifyApi.getPlaylistTracks(playlistID, this.getPlaylistTracksCallback);\n    } //Callback function thats called when after spotify API runs createPlaylist()\n    //error is an error object, null if no error\n    //value is the value if the request succeeded\n    //adds the playlist id as a url parameter\n    //calls getPlaylistHelper() after getting the playlist id\n\n  }, {\n    key: \"createNewPlaylistCallback\",\n    value: function createNewPlaylistCallback(error, value) {\n      console.log(\"2error: \" + error);\n      var playlistID = value.id;\n      console.log(\"playilstID: \" + playlistID);\n      var url = window.location.href + \"&playlist_id=\" + playlistID;\n      console.log(\"2URL TO SHARE: \" + url);\n      this.getPlaylistHelper(playlistID);\n      window.location.assign(url);\n      window.location.href = url;\n      var idcheck = this.getUrlParams2(\"playlist_id\");\n      console.log(\"playlist id from params: \" + idcheck); //return playlistID;\n    } //id is the user id, playlist name is what the user inputs as the name\n    //calls createPlaylist() from the spotify api\n    //has createNewPlaylistCallback as callback function\n\n  }, {\n    key: \"createNewPlaylist\",\n    value: function createNewPlaylist(id, playlistname) {\n      //var playlistID;\n      spotifyApi.createPlaylist(id, {\n        name: playlistname\n      }, this.createNewPlaylistCallback); //console.log(\"left createNewPlaylist\");\n    }\n    /*search(q) {\n    \tspotifyApi.search(q, 'track')\n    \t.then((response) => {\n    \t\tthis.setState( {\n    \t\t\tresults: response.track.items\n    \t\t});\n    \t})\n    \tvar list = this.state.results.map((results) =>\n    \t\t<li>{this.state.results.name}</li>\n    \t);\n    }*/\n\n  }, {\n    key: \"getTrack\",\n    value: function getTrack(traId) {\n      var _this4 = this;\n\n      spotifyApi.getTrack(traId).then(function (response) {\n        _this4.setState({\n          newTrack: response.uri\n        });\n      });\n    }\n  }, {\n    key: \"addTracks\",\n    value: function addTracks(uri) {\n      console.log(\"this is being removed...\" + uri);\n      var playlistID = this.getUrlParams2(\"playlist_id\");\n      var token = this.getUrlParams2(\"access_token\");\n      spotifyApi.setAccessToken(token); //spotifyApi.addTracksToPlaylist(playlistID, [uri], this.addTracksCallBack);\n\n      spotifyApi.addTracksToPlaylist(playlistID, [uri]).then(function (data) {\n        console.log('Search by \"Love\"', data);\n      }, function (err) {\n        console.error(err);\n      });\n      /*var uri = this.state.getTrack.newTrack\n      spotifyApi.addTracksToPlaylist(snId, uri)\n      .then((response) => {\n      this.setState( {\n      \tsnId: response.snapshot_id\n      });\n      })*/\n    }\n  }, {\n    key: \"addTracksCallBack\",\n    value: function addTracksCallBack(error, value) {\n      console.log(\"error\" + error);\n      console.log(\"track added... \" + value);\n    } //gets the snid so it can remove tracks\n\n  }, {\n    key: \"getSNIDtoremoveTracks\",\n    value: function getSNIDtoremoveTracks(trackURI) {\n      trackToggle = trackURI;\n      var playlistID = this.getUrlParams2(\"playlist_id\"); //this.getPlaylistHelper(playlistID)\n\n      spotifyApi.getPlaylist(playlistID, this.SNIDtoRemoveCallback);\n    } //callback to getPlaylist for the snid. it takes the snid and then actually tries to remove the song now\n\n  }, {\n    key: \"SNIDtoRemoveCallback\",\n    value: function SNIDtoRemoveCallback(error, value) {\n      var snid = value.snapshot_id;\n      console.log(\"snid: \" + snid); //var position = tracks.indexOf() can add in later\n\n      var playlistID = hereIsThis.getUrlParams2(\"playlist_id\");\n      spotifyApi.removeTracksFromPlaylistWithSnapshotId(playlistID, [trackToggle], snid, hereIsThis.removeTrackWithSnidCallback);\n    }\n  }, {\n    key: \"removeTrackWithSnidCallback\",\n    value: function removeTrackWithSnidCallback(error, value) {\n      console.log(\"well...that song should be removed:\" + value.name);\n      var playlistID = hereIsThis.getUrlParams2(\"playlist_id\");\n      hereIsThis.getPlaylistHelper(playlistID); //hereIsThis.forceUpdate();\n\n      window.location.reload();\n    } //i dont think I need this function\n\n  }, {\n    key: \"removeTracks\",\n    value: function removeTracks(snId) {\n      var _this5 = this;\n\n      var playlistID = this.getUrlParams2(\"playlist_id\"); //spotifyApi.getPlaylist(playlistID, {snapshot_id},\n\n      var uri;\n      spotifyApi.removeTracksFromPlaylistWithSnapshotId(snId, uri).then(function (response) {\n        _this5.setState({\n          snId: response.snapshot_id\n        });\n      });\n    }\n  }, {\n    key: \"searchHelper\",\n    value: function searchHelper(value) {\n      console.log(\"in search helper\"); //console.log(\"search results: \" + items);\n\n      var i = 0; //console.log(\"error: \" + error);\n\n      console.log(\"value: \" + typeof value);\n      console.log(\"total: \" + value.total);\n\n      for (i = 0; i < value.total; i++) {\n        searchTracks.push(value.items[i].track); //name of the track\n\n        console.log(\"track: \" + tracks[i]); //console.log(\"track \" + i + value.items[i].track.name);\n      } //\n      //var i = items;\n\n\n      listSearchTracks = searchTracks.map(function (searchTracks) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          id: searchTracks.uri,\n          onClick: function onClick(e) {\n            return hereIsThis.addTracks(e.target.id);\n          },\n          class: \"btn btn-success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 394\n          },\n          __self: this\n        }, \"-\"), i.name);\n      });\n      this.openModal();\n    }\n  }, {\n    key: \"search\",\n    value: function search() {\n      console.log(\"in search\");\n      var x = document.getElementById(\"searcht\");\n      var query = '';\n      query = x.elements[0].value;\n      console.log(\"query: \" + query);\n      var token = this.getUrlParams2(\"access_token\");\n      spotifyApi.setAccessToken(token);\n      var alsoThis = this; //\tvar token = this.getUrlParams2(\"access_token\");\n\n      /*fetch('https://api.spotify.com/v1/search?q={query}&type=track}', {headers: {'Authorization':'Bearer ' + token}})\n          .then(response => response.json())\n          .then(data => this.searchHelper(data.items));\n      spotifyApi.setAccessToken(token);*/\n\n      /*fetch('https://api.spotify.com/v1/search', {headers: {'Authorization':'Bearer ' + token}})\n          .then(response => response.json())\n          .then(data => spotifyApi.searchTracks('Mr. Brightside', this.searchHelper));*/\n\n      spotifyApi.searchTracks('Love').then(function (data) {\n        console.log('Search by \"Love\"', data);\n      }, function (err) {\n        console.error(err);\n      });\n      spotifyApi.searchTracks(query).then(function (data) {\n        var i = 0;\n        console.log(\"total: \" + data.tracks.total);\n\n        for (i = 0; i < 20; i++) {\n          console.log(\"func call \" + i);\n          searchTracks.push(data.tracks.items[i]); //name of the track\n\n          console.log(\"track: \" + data.tracks.items[i].name); //console.log(\"track \" + i + value.items[i].track.name);\n        } //\n        //var i = items;\n\n\n        listSearchTracks = searchTracks.map(function (searchTracks) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434\n            },\n            __self: this\n          }, React.createElement(\"button\", {\n            id: searchTracks.uri,\n            onClick: function onClick(e) {\n              return alsoThis.addTracks(e.target.id);\n            },\n            class: \"btn btn-success\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 434\n            },\n            __self: this\n          }, \"+\"), searchTracks.name, \" by \", searchTracks.artists[0].name);\n        });\n        console.log(\"everything added in search\");\n        alsoThis.openModal();\n      }, function (err) {\n        console.error(err);\n      });\n      console.log(\"leaving search\");\n    } // Display our data\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement,\n          _this6 = this;\n\n      //mainid = this.props.id;\n      var alsoThis = this;\n      console.log(\"im in render: \");\n      return React.createElement(\"div\", {\n        id: \"app\",\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        class: \"cover-heading\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }, \"DJFY\"), React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }, React.createElement(Modal, (_React$createElement = {\n        isOpen: this.state.modalIsOpen,\n        onAfterOpen: this.afterOpenModal,\n        onRequestClose: this.closeModal,\n        style: customStyles\n      }, _defineProperty(_React$createElement, \"style\", \"overflow-y: scroll; background: #282c34;\"), _defineProperty(_React$createElement, \"contentLabel\", \"Example Modal\"), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), React.createElement(\"button\", {\n        class: \"pull-right btn btn-sm btn-primary\",\n        onClick: this.closeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, \"close\"), listSearchTracks, \" \", console.log(\"search listed\")), React.createElement(\"div\", {\n        class: \"create col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 468\n        },\n        __self: this\n      }, \"Spotify Account: \", this.state.spotifyAccount.accountName, React.createElement(\"img\", {\n        src: this.state.spotifyAccount.accountPic,\n        style: {\n          height: 100\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }), \" \", this.state.loggedIn && React.createElement(\"button\", {\n        class: \"btn btn-sm btn-primary\",\n        onClick: function onClick() {\n          return _this6.getConnectedAccount();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, \"ShowAccount\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479\n        },\n        __self: this\n      }, \"Connect to Spotify \\xA0\"), React.createElement(\"a\", {\n        href: \"https://djfy-backend-server.herokuapp.com/login\",\n        class: \"btn btn-lg btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }, \"Connect\"), React.createElement(\"form\", {\n        id: \"createroom\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 481\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 482\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483\n        },\n        __self: this\n      }, \"NAME PLAYLIST:\")), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"YOUR_ID\",\n        className: this.state.isCreated ? 'box focused' : 'box',\n        onClick: function onClick() {\n          return _this6.createRoom();\n        },\n        class: \"btn btn-lg btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, \"CREATE ROOM\")))), \" \", React.createElement(\"div\", {\n        class: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"room col-sm-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496\n        },\n        __self: this\n      }, this.state.playlistName), React.createElement(\"form\", {\n        id: \"searcht\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }))), React.createElement(\"p\", {\n        class: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        id: \"\",\n        onClick: function onClick() {\n          return _this6.search();\n        },\n        class: \"btn btn-lg btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, \"SEARCH\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }), listTracks, \" \", console.log(\"listed\")))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/afnaan/Desktop/djfyMASTER/src/App.js"],"names":["React","Component","ReactDOM","Modal","SpotifyWebApi","urlListener","require","event","console","log","spotifyApi","tracks","searchTracks","listSearchTracks","listTracks","trackToggle","customStyles","content","top","left","right","bottom","marginRight","transform","background","hereIsThis","setAppElement","document","getElementById","App","idCheck","getUrlParams2","length","getPlaylistHelper","props","changePlaylistName","setState","playlistName","target","value","token","setAccessToken","isTherePlaylistID","state","loggedIn","spotifyAccount","accountName","accountPic","Id","roomCode","isCreated","handleChange","bind","getConnectedAccount","createNewPlaylist","createNewPlaylistCallback","createNewPlaylistHelper","getPlaylistTracksCallback","search","searchHelper","getTrack","addTracks","removeTracks","render","openModal","afterOpenModal","closeModal","addTracksCallBack","modalIsOpen","window","location","reload","prop","params","decodeURIComponent","href","slice","indexOf","definitions","split","forEach","val","key","parts","getMe","then","response","display_name","images","url","id","name","playlistID","x","playlistname","elements","fetch","headers","json","data","alert","error","total","i","push","items","track","map","uri","e","getSNIDtoremoveTracks","artists","forceUpdate","getPlaylistTracks","assign","idcheck","createPlaylist","traId","newTrack","addTracksToPlaylist","err","trackURI","getPlaylist","SNIDtoRemoveCallback","snid","snapshot_id","removeTracksFromPlaylistWithSnapshotId","removeTrackWithSnidCallback","snId","query","alsoThis","height","createRoom"],"mappings":"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","sourcesContent":["/**\n* DJFY Web App code\n*\n*/\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\n\nimport './css/bootstrap.css';\nimport './css/cover.css';\nimport SpotifyWebApi from 'spotify-web-api-js';\n//import url from 'url-parameters';\n\nconst urlListener = require('url-listener')\n\nurlListener(event => {\n  // your logic here!\n  console.log('URL UPDATED!')\n})\n\nvar spotifyApi = new SpotifyWebApi();\nvar tracks = [];\nvar searchTracks = [];\nvar listSearchTracks;\nvar listTracks; //= tracks.map((tracks) =>\n  //<li><button style = {{width: 25, height: 25, borderWidth: 3, fontSize: 15, backgroundColor: '#FF0000'}}>-</button>{tracks}</li>\n//);\nvar trackToggle;\n//var snapshot = '';\n//var currentTrack = '';\n//var mainid = '';\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)',\n    background: '#282c34',\n  }\n};\nvar hereIsThis = this;\nModal.setAppElement(document.getElementById('app'));\nclass App extends Component {\n\n  //This checks if there is a playlist ID currently in the URL\n  //this is for the guest users that have the shared link\n  //it should immediately print the playlist tracks/info\n   isTherePlaylistID() {\n    var idCheck = this.getUrlParams2(\"playlist_id\");\n    if(idCheck && idCheck.length >2) {\n      console.log(\"WE HAVE A PLAYLIST ID IN THE URL: \" + idCheck);\n      this.getPlaylistHelper(idCheck);\n\n    }\n  }\n    // Get access token to be able to fetch data from the Spotify API\n    constructor(props) {\n      super(props);\n      const token = this.getUrlParams2(\"access_token\");\n      console.log(\"token: \" + token);\n      if (token) {\n        console.log(\"setting token...\");\n          spotifyApi.setAccessToken(token);\n      }\n      this.isTherePlaylistID();\n      this.state = {\n          loggedIn: token ? true : false,\n          spotifyAccount: {accountName: 'Not Logged In', accountPic: '', Id: ''},\n\n          playlistName:'',\n          roomCode: '',\n          value: '',\n          isCreated: false,\n          };\n\n          this.handleChange = this.handleChange.bind(this);\n         // this.handleSearch = this.handleSearch.bind(this);\n\n          //this.getHashParams = this.getHashParams.bind(this);\n          this.getConnectedAccount = this.getConnectedAccount.bind(this);\n          this.createNewPlaylist = this.createNewPlaylist.bind(this);\n          this.createNewPlaylistCallback = this.createNewPlaylistCallback.bind(this);\n          this.createNewPlaylistHelper = this.createNewPlaylistHelper.bind(this);\n          this.getPlaylistHelper = this.getPlaylistHelper.bind(this);\n          this.getPlaylistTracksCallback = this.getPlaylistTracksCallback.bind(this);\n          this.search = this.search.bind(this);\n          this.searchHelper = this.searchHelper.bind(this);\n          this.getTrack = this.getTrack.bind(this);\n          this.addTracks = this.addTracks.bind(this);\n          this.removeTracks = this.removeTracks.bind(this);\n          this.render = this.render.bind(this);\n          this.openModal = this.openModal.bind(this);\n          this.afterOpenModal = this.afterOpenModal.bind(this);\n          this.closeModal = this.closeModal.bind(this);\n          this.addTracksCallBack = this.addTracksCallBack.bind(this);\n          //this.forceUpdate = this.forceUpdate.bind(this);\n      }\n\n      openModal() {\n        this.setState({modalIsOpen: true});\n      }\n\n      afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        //this.subtitle.style.color = '#f00';\n      }\n\n      closeModal() {\n        this.setState({modalIsOpen: false});\n        window.location.reload();\n      }\n\n    handleChange(event) {\n        this.setState({value: event.target.value});\n      }\n\n    handleSearch(event) {\n        this.search(this.state.search);\n    }\n\n    changePlaylistName = (event) =>  {\n        this.setState({\n        playlistName: event.target.value\n          })\n    }\n\n  getUrlParams2( prop ) {\n    var params = {};\n    var search = decodeURIComponent( window.location.href.slice( window.location.href.indexOf( '#' ) + 1 ) );\n    var definitions = search.split( '&' );\n\n    definitions.forEach( function( val, key ) {\n        var parts = val.split( '=', 2 );\n        params[ parts[ 0 ] ] = parts[ 1 ];\n    } );\n\n    return ( prop && prop in params ) ? params[ prop ] : params;\n}\n\n\n    // Request API data\n    // Using library provided by JMPerez/spotify-web-api-js\n    // (https://github.com/JMPerez/spotify-web-api-js)\n    getConnectedAccount() {\n        spotifyApi.getMe()\n            .then((response) => {\n                this.setState( {\n                    spotifyAccount: {\n                        accountName: response.display_name,\n                        accountPic: response.images[0].url,\n\t\t\t\t\t\t            Id: response.id\n                    }\n                });\n            })\n            var token = this.getUrlParams2(\"access_token\");\n\n           spotifyApi.setAccessToken(token);\n\n    }\n\n    /*joinRoom() {\n          var x = document.getElementById(\"joinroom\");\n          var text = \"\";\n          text = x.elements[0].value;\n          console.log(\"code: \" + text);\n          //check if its a legal inputted code (4 capital characters)\n          if(this.state.value.length == 4){\n            //check if the database has the inputted code\n            if(false/* inDatabase(this.state.value.toUpperCase()){\n              //if the database has that code, display the corresponding playlist\n              //enter room\n            }\n            else{\n              //if it doesnt then error out\n              alert(this.state.value.toUpperCase() + \" is an invalid room code.\");\n            }\n          }\n          else{\n            alert(this.state.value.toUpperCase() + \" is an invalid room code. \\nRoom codes are 4 characters long.\")\n          }\n\n  }*/\n\n  /*makeid(length) {\n    var text = \"\";\n    var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n     for (var i = 0; i < length; i++)\n       text += possible.charAt(Math.floor(Math.random() * possible.length));\n     return text;\n   }*/\n\n  async createNewPlaylistHelper(id, name) {\n    console.log(\"helper id: \"+ id);\n    await this.createNewPlaylist(id, name);\n    var playlistID = this.getUrlParams2(\"x\");\n    console.log(\"here is the playlist ID: \"+ playlistID);\n  }\n\n  createRoom() {\n    if (this.state.loggedIn) {\n        this.setState( {\n          //roomCode: this.makeid(4),\n          playlistName: this.state.value\n        })\n\n        var x = document.getElementById(\"createroom\");\n        var playlistname = \"\";\n        playlistname = x.elements[0].value;\n        var token = this.getUrlParams2(\"access_token\");\n        fetch('https://api.spotify.com/v1/me', {headers: {'Authorization':'Bearer ' + token}})\n            .then(response => response.json())\n            .then(data => this.createNewPlaylistHelper(data.id,playlistname));\n        console.log(\"back in createRoom()\");\n        spotifyApi.setAccessToken(token);\n      }\n    else {\n        //get room code input\n        //enter room\n        alert(\"You need to connect to Spotify before you can create a room.\");\n    }\n}\n\n\n//Callback function thats called when after spotify API runs getPlaylistTracks()\n//error is an error object, null if no error\n//value is the value if the request succeeded\n//This prints the total tracks, adds the tracks to the tracks array, and prints them\ngetPlaylistTracksCallback(error, value) {\n  console.log(\"error: \" + error);\n  console.log(\"in the callback...totala: \"+ value.total);\n  var total = value.total;\n  console.log(\"total assigned: \"+ total);\n  var i;\n  for(i=0; i<value.total; i++) {\n    tracks.push(value.items[i].track); //name of the track\n    console.log(\"track: \" + tracks[i]);\n    //console.log(\"track \" + i + value.items[i].track.name);\n  }  //\n  //displays all the tracks, the corresponding buttons will call getSNIDtoremoveTracks(trackURI)\n  //set the button id to the uri of the track. this is so when we do e.target.id, itll actually be passing in the track.uri\n  listTracks = tracks.map((tracks) =>\n  <li key={tracks.id}><button id= {tracks.uri} onClick={e => hereIsThis.getSNIDtoremoveTracks(e.target.id)} class=\"btn btn-danger\"> - </button> {tracks.name} by {tracks.artists[0].name}</li>\n);\n\nhereIsThis.forceUpdate();\n//this.setState({listTracks});\n // this.render().bind(this);\n //ReactDOM.render();\n}\n\n//this calls getPlaylistTracks given the playlist ID\ngetPlaylistHelper(playlistID) {\n  console.log(\"getting playlist...\" + playlistID);\n  hereIsThis = this;\n  var token = this.getUrlParams2(\"access_token\");\n  spotifyApi.setAccessToken(token);\n  spotifyApi.getPlaylistTracks(playlistID,this.getPlaylistTracksCallback);\n}\n\n//Callback function thats called when after spotify API runs createPlaylist()\n//error is an error object, null if no error\n//value is the value if the request succeeded\n//adds the playlist id as a url parameter\n//calls getPlaylistHelper() after getting the playlist id\ncreateNewPlaylistCallback(error, value) {\n\n   console.log(\"2error: \"+error);\n   var playlistID = value.id;\n\n   console.log(\"playilstID: \" + playlistID);\n   var url = window.location.href + \"&playlist_id=\" + playlistID;\n   console.log(\"2URL TO SHARE: \" + url);\n   this.getPlaylistHelper(playlistID);\n\n   window.location.assign(url);\n   window.location.href = url;\n\n   var idcheck = this.getUrlParams2(\"playlist_id\");\n   console.log(\"playlist id from params: \" + idcheck);\n\n   //return playlistID;\n  }\n\n\n//id is the user id, playlist name is what the user inputs as the name\n//calls createPlaylist() from the spotify api\n//has createNewPlaylistCallback as callback function\ncreateNewPlaylist(id, playlistname)\t{\n  //var playlistID;\n  spotifyApi.createPlaylist(id,{name:playlistname},this.createNewPlaylistCallback);\n  //console.log(\"left createNewPlaylist\");\n}\n\n\t/*search(q) {\n\t\tspotifyApi.search(q, 'track')\n\t\t.then((response) => {\n\t\t\tthis.setState( {\n\t\t\t\tresults: response.track.items\n\t\t\t});\n\t\t})\n\t\tvar list = this.state.results.map((results) =>\n\t\t\t<li>{this.state.results.name}</li>\n\t\t);\n\t}*/\n\n\tgetTrack(traId) {\n\t\tspotifyApi.getTrack(traId)\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tnewTrack: response.uri\n\t\t\t\t});\n\t\t\t})\n\t}\n\n\taddTracks(uri) {\n    console.log(\"this is being removed...\" + uri);\n    var playlistID = this.getUrlParams2(\"playlist_id\");\n    var token = this.getUrlParams2(\"access_token\");\n    spotifyApi.setAccessToken(token);\n    //spotifyApi.addTracksToPlaylist(playlistID, [uri], this.addTracksCallBack);\n    spotifyApi.addTracksToPlaylist(playlistID, [uri])\n    .then(function(data) {\n      console.log('Search by \"Love\"', data);\n    }, function(err) {\n      console.error(err);\n    });\n    /*var uri = this.state.getTrack.newTrack\n\t\tspotifyApi.addTracksToPlaylist(snId, uri)\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tsnId: response.snapshot_id\n\t\t\t\t});\n\t\t\t})*/\n  }\n\n  addTracksCallBack(error, value) {\n    console.log(\"error\" + error);\n    console.log(\"track added... \" + value);\n  }\n\n  //gets the snid so it can remove tracks\n  getSNIDtoremoveTracks(trackURI) {\n    trackToggle =trackURI;\n    var playlistID = this.getUrlParams2(\"playlist_id\");\n    //this.getPlaylistHelper(playlistID)\n    spotifyApi.getPlaylist(playlistID, this.SNIDtoRemoveCallback );\n  }\n\n  //callback to getPlaylist for the snid. it takes the snid and then actually tries to remove the song now\n  SNIDtoRemoveCallback(error, value) {\n    var snid = value.snapshot_id;\n    console.log(\"snid: \" + snid);\n    //var position = tracks.indexOf() can add in later\n    var playlistID = hereIsThis.getUrlParams2(\"playlist_id\");\n    spotifyApi.removeTracksFromPlaylistWithSnapshotId(playlistID,[trackToggle], snid, hereIsThis.removeTrackWithSnidCallback);\n  }\n\n  removeTrackWithSnidCallback(error, value) {\n    console.log(\"well...that song should be removed:\" + value.name);\n    var playlistID = hereIsThis.getUrlParams2(\"playlist_id\");\n    hereIsThis.getPlaylistHelper(playlistID)\n    //hereIsThis.forceUpdate();\n    window.location.reload();\n  }\n\n  //i dont think I need this function\n\tremoveTracks(snId) {\n    var playlistID = this.getUrlParams2(\"playlist_id\");\n    //spotifyApi.getPlaylist(playlistID, {snapshot_id},\n    var uri;\n\t\tspotifyApi.removeTracksFromPlaylistWithSnapshotId(snId, uri)\n\t\t\t.then((response) => {\n\t\t\t\tthis.setState( {\n\t\t\t\t\tsnId: response.snapshot_id\n\t\t\t\t});\n\t\t\t})\n  }\n  searchHelper(value){\n    console.log(\"in search helper\");\n    //console.log(\"search results: \" + items);\n    var i =0;\n    //console.log(\"error: \" + error);\n    console.log(\"value: \" + typeof value);\n    console.log(\"total: \" + value.total);\n    for(i=0; i<value.total; i++) {\n      searchTracks.push(value.items[i].track); //name of the track\n      console.log(\"track: \" + tracks[i]);\n      //console.log(\"track \" + i + value.items[i].track.name);\n    }  //\n    //var i = items;\n    listSearchTracks = searchTracks.map((searchTracks) =>\n      <li><button id= {searchTracks.uri} onClick={e => hereIsThis.addTracks(e.target.id)} class=\"btn btn-success\">-</button>{i.name}</li>\n    );\n    this.openModal();\n  }\n\n  search() {\n    console.log(\"in search\");\n    var x = document.getElementById(\"searcht\");\n    var query = '';\n    query = x.elements[0].value;\n    console.log(\"query: \" + query);\n    var token = this.getUrlParams2(\"access_token\");\n    spotifyApi.setAccessToken(token);\n    var alsoThis = this;\n\t//\tvar token = this.getUrlParams2(\"access_token\");\n        /*fetch('https://api.spotify.com/v1/search?q={query}&type=track}', {headers: {'Authorization':'Bearer ' + token}})\n            .then(response => response.json())\n            .then(data => this.searchHelper(data.items));\n        spotifyApi.setAccessToken(token);*/\n\n        /*fetch('https://api.spotify.com/v1/search', {headers: {'Authorization':'Bearer ' + token}})\n            .then(response => response.json())\n            .then(data => spotifyApi.searchTracks('Mr. Brightside', this.searchHelper));*/\n  spotifyApi.searchTracks('Love')\n  .then(function(data) {\n    console.log('Search by \"Love\"', data);\n  }, function(err) {\n    console.error(err);\n  });\n    spotifyApi.searchTracks(query) .then(function(data) {\n      var i=0;\n      console.log(\"total: \" + data.tracks.total);\n    for(i=0; i<20; i++) {\n      console.log(\"func call \" + i);\n      searchTracks.push(data.tracks.items[i]); //name of the track\n      console.log(\"track: \" + data.tracks.items[i].name);\n      //console.log(\"track \" + i + value.items[i].track.name);\n    }  //\n    //var i = items;\n    listSearchTracks = searchTracks.map((searchTracks) =>\n      <li><button id= {searchTracks.uri} onClick={e => alsoThis.addTracks(e.target.id)} class=\"btn btn-success\">+</button>{searchTracks.name} by {searchTracks.artists[0].name}</li>\n    );\n    console.log(\"everything added in search\");\n    alsoThis.openModal();\n    }, function(err) {\n      console.error(err);\n    });\n    console.log(\"leaving search\");\n}\n\n\n\n    // Display our data\n    render() {\n      //mainid = this.props.id;\n      var alsoThis = this;\n      console.log(\"im in render: \");\n        return (\n          <div id=\"app\" className=\"App\">\n            <h1 class=\"cover-heading\">DJFY</h1>\n            <div class=\"row\">\n              <Modal\n\n                isOpen={this.state.modalIsOpen}\n                onAfterOpen={this.afterOpenModal}\n                onRequestClose={this.closeModal}\n                style={customStyles}\n                style=\"overflow-y: scroll; background: #282c34;\"\n                contentLabel=\"Example Modal\">\n                <button class=\"pull-right btn btn-sm btn-primary\" onClick={this.closeModal}>close</button>\n                {/*<h2 ref={subtitle => this.subtitle = subtitle}>Hello</h2>*/}\n                {listSearchTracks} {console.log(\"search listed\")}\n\n              </Modal>\n              <div class=\"create col-sm-12\">\n                Spotify Account: {this.state.spotifyAccount.accountName}\n                <img  src={this.state.spotifyAccount.accountPic} style={{ height: 100 }}/>\n                {/*user id: {this.state.spotifyAccount.Id}*/}\n                <br /> <br /> {/* Show button to check spotify account */}\n                  {\n                this.state.loggedIn &&\n                <button class=\"btn btn-sm btn-primary\" onClick={() => this.getConnectedAccount()}>\n                    ShowAccount\n                </button>\n                  }\n                <p>Connect to Spotify &nbsp;</p>\n                <a href=\"https://djfy-backend-server.herokuapp.com/login\" class=\"btn btn-lg btn-secondary\">Connect</a>\n                <form id=\"createroom\">\n                      <p class=\"lead\">\n                        <a>NAME PLAYLIST:</a>\n                      </p>\n                      <input  type = 'text' onChange={this.handleChange} />\n                </form>\n                <p class=\"lead\">\n                  <a id=\"YOUR_ID\" className={this.state.isCreated ? 'box focused' : 'box'}  onClick={() => this.createRoom()} class=\"btn btn-lg btn-secondary\">{/*React.cloneElement(alsoThis.props.children, {\n                    onClick: _ => this.setState({isCreated: true}),})*/}CREATE ROOM</a>\n                </p>\n              </div>\n            </div> {/* Closing div for first row */}\n            <div class=\"row\">\n              <div class=\"room col-sm-12\">\n                <ul>\n                <h2>{this.state.playlistName}</h2>\n                <form id =\"searcht\">\n                  <label>\n\n                    <input  type = 'text' />\n                  </label>\n                  {/*<input onClick={() => this.search} value=\"Search\" />*/}\n\n                </form>\n                <p class=\"lead\">\n                  <a id=\"\" onClick={() => this.search()} class=\"btn btn-lg btn-secondary\">SEARCH</a>\n                </p>\n                      <br/> <br/>\n                      {listTracks} {console.log(\"listed\")}\n                </ul>\n              </div>\n            </div>\n          </div>\n        );\n    }\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}